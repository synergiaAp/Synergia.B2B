//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Synergia.B2B.Common.Resources {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ResHoodOffer {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResHoodOffer() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Synergia.B2B.Common.Resources.ResHoodOffer", typeof(ResHoodOffer).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ansul - okap wyposażony w system przeciwpożarowy do okapów ANSUL R-102.
        /// </summary>
        public static string AnsulOkapWyposazonyWSystemPrzeciwpozarowy {
            get {
                return ResourceManager.GetString("AnsulOkapWyposazonyWSystemPrzeciwpozarowy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ansul - system przeciwpożarowy do okapów.
        /// </summary>
        public static string AnsulSystemPrzeciwpozarowyDoOkapow {
            get {
                return ResourceManager.GetString("AnsulSystemPrzeciwpozarowyDoOkapow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {0} (maksymalna liczba wypływu {1}FN).
        /// </summary>
        public static string AnsulUkladOpis {
            get {
                return ResourceManager.GetString("AnsulUkladOpis", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu System Ansul nie jest wymagany do tego okapu.
        /// </summary>
        public static string AnsulUkladOpisNieWymagany {
            get {
                return ResourceManager.GetString("AnsulUkladOpisNieWymagany", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bilans powietrza wyciąganego przez okap.
        /// </summary>
        public static string BilansPowietrzaWyciaganegoPrzezOkap {
            get {
                return ResourceManager.GetString("BilansPowietrzaWyciaganegoPrzezOkap", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dane elektryczne.
        /// </summary>
        public static string DaneElektryczne {
            get {
                return ResourceManager.GetString("DaneElektryczne", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dane techniczne dobranego okapu.
        /// </summary>
        public static string DaneTechniczneDobranegoOkapu {
            get {
                return ResourceManager.GetString("DaneTechniczneDobranegoOkapu", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Data.
        /// </summary>
        public static string Data {
            get {
                return ResourceManager.GetString("Data", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Data doboru.
        /// </summary>
        public static string DataDoboru {
            get {
                return ResourceManager.GetString("DataDoboru", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Długość kasety dobranego filtra.
        /// </summary>
        public static string DlugoscKasetyDobranegoFiltra {
            get {
                return ResourceManager.GetString("DlugoscKasetyDobranegoFiltra", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Długość okapu.
        /// </summary>
        public static string DlugoscOkapu {
            get {
                return ResourceManager.GetString("DlugoscOkapu", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dobór nr.
        /// </summary>
        public static string DoborNr {
            get {
                return ResourceManager.GetString("DoborNr", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dobrany filtr.
        /// </summary>
        public static string DobranyFiltr {
            get {
                return ResourceManager.GetString("DobranyFiltr", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dobrany nawiew.
        /// </summary>
        public static string DobranyNawiew {
            get {
                return ResourceManager.GetString("DobranyNawiew", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dobrany okap.
        /// </summary>
        public static string DobranyOkap {
            get {
                return ResourceManager.GetString("DobranyOkap", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dobrany wywiew.
        /// </summary>
        public static string DobranyWywiew {
            get {
                return ResourceManager.GetString("DobranyWywiew", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Do doboru nr.
        /// </summary>
        public static string DoDoboruNr {
            get {
                return ResourceManager.GetString("DoDoboruNr", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Eksperci.
        /// </summary>
        public static string Ekperci {
            get {
                return ResourceManager.GetString("Ekperci", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Filtr sadzy.
        /// </summary>
        public static string FiltrSadzy {
            get {
                return ResourceManager.GetString("FiltrSadzy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Filtr TurboSwing.
        /// </summary>
        public static string FiltrTurboSwing {
            get {
                return ResourceManager.GetString("FiltrTurboSwing", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Filtr UV-Combilux UV600.
        /// </summary>
        public static string FiltrUVCombilux {
            get {
                return ResourceManager.GetString("FiltrUVCombilux", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Filtr UV-Turbo.
        /// </summary>
        public static string FiltrUVTurbo {
            get {
                return ResourceManager.GetString("FiltrUVTurbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Filtry.
        /// </summary>
        public static string Filtry {
            get {
                return ResourceManager.GetString("Filtry", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Smoki Junior to urządzenie, które eliminuje do 95% cząsteczek sadzy powstających w piecach do pizzy opalanych drewnem, jednocześnie redukując zapachy. Zastosowanie systemu filtracji Smoki Junior zapobiega zabrudzeniu kanałów dymowych oraz znacząco obniża ryzyko pożaru poprzez schłodzenie temperatury dymu.
        ///W przypadku instalacji, gdzie nie ma możliwości odprowadzenia dymu grawitacyjnie, istnieje możliwość wyposażenia Smoki Junior w wentylator wspomagający ciąg naturalny.
        ///Smoki Junior jest praktycznym rozwi [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string FiltrySadzySmokiJuniorOpis {
            get {
                return ResourceManager.GetString("FiltrySadzySmokiJuniorOpis", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Smoki Maxi Grill to urządzenie specjalnie zaprojektowane do filtracji sadzy i tłuszczów z wywiewanego powietrza przez okap zlokalizowany nad grillami opalanymi drewnem lub węglem drzewnym. System Smoki Maxi Grill eliminuje do 95% cząsteczek sadzy i tłuszczu w powietrzu wyciąganym, jednocześnie redukując zapachy oraz znacząco obniżając temperaturę powietrza wywiewanego. Zastosowanie systemu filtracji Smoki Maxi Grill zapobiega zabrudzeniu kanałów dymowych oraz znacząco obniża ryzyko pożaru poprzez schłodzeni [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string FiltrySadzySmokiMaxiOpis {
            get {
                return ResourceManager.GetString("FiltrySadzySmokiMaxiOpis", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Głośność.
        /// </summary>
        public static string Glosnosc {
            get {
                return ResourceManager.GetString("Glosnosc", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ilość
        ///[szt].
        /// </summary>
        public static string Ilosc {
            get {
                return ResourceManager.GetString("Ilosc", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ilość kaset filtrów.
        /// </summary>
        public static string IloscKasetFiltrow {
            get {
                return ResourceManager.GetString("IloscKasetFiltrow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ilość króćców nawiewnych.
        /// </summary>
        public static string IloscKroccowNawiewnych {
            get {
                return ResourceManager.GetString("IloscKroccowNawiewnych", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ilość króćców wywiewnych.
        /// </summary>
        public static string IloscKroccowWywiewnych {
            get {
                return ResourceManager.GetString("IloscKroccowWywiewnych", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ilość modułów.
        /// </summary>
        public static string IloscModułow {
            get {
                return ResourceManager.GetString("IloscModułow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Jednostka sterująca/kontrolująca pracę okapu.
        /// </summary>
        public static string JednostkaSterujaca {
            get {
                return ResourceManager.GetString("JednostkaSterujaca", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Karta doboru filtra sadzy SMOKI.
        /// </summary>
        public static string KartaDoboruFiltraSadzySmoki {
            get {
                return ResourceManager.GetString("KartaDoboruFiltraSadzySmoki", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Karta doboru nawiewników.
        /// </summary>
        public static string KartaDoboruNawiewnikow {
            get {
                return ResourceManager.GetString("KartaDoboruNawiewnikow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Karta doboru okapu synergia.
        /// </summary>
        public static string KartaDoboruOkapuSynergia {
            get {
                return ResourceManager.GetString("KartaDoboruOkapuSynergia", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Karta doboru systemu ANSUL R-102.
        /// </summary>
        public static string KartaDoboruSystemuAnsulR102 {
            get {
                return ResourceManager.GetString("KartaDoboruSystemuAnsulR102", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Króciec podłączeniowy
        ///&amp;Phi;[mm].
        /// </summary>
        public static string KrociecPodlaczeniowy {
            get {
                return ResourceManager.GetString("KrociecPodlaczeniowy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Łączna moc elektryczna filtrów.
        /// </summary>
        public static string LacznaMocElektrycznaFiltrow {
            get {
                return ResourceManager.GetString("LacznaMocElektrycznaFiltrow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Łączna moc elektryczna oświetelenia.
        /// </summary>
        public static string LacznaMocElektrycznaOswietlenia {
            get {
                return ResourceManager.GetString("LacznaMocElektrycznaOswietlenia", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Łączna moc elektryczna wentylatorów.
        /// </summary>
        public static string LacznaMocElektrycznaWentylatorow {
            get {
                return ResourceManager.GetString("LacznaMocElektrycznaWentylatorow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Legenda.
        /// </summary>
        public static string Legenda {
            get {
                return ResourceManager.GetString("Legenda", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu wkaźnik wyposażenia - opisuje ilośc zanieczyszczeń wydzielanych przez urządzenia.
        /// </summary>
        public static string LegendaKe {
            get {
                return ResourceManager.GetString("LegendaKe", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu strumień powietrza wyciąganego.
        /// </summary>
        public static string LegendaMp {
            get {
                return ResourceManager.GetString("LegendaMp", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu moc zainstalowana.
        /// </summary>
        public static string LegendaP {
            get {
                return ResourceManager.GetString("LegendaP", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu współczynnik jednoczesności pracy urządzeń.
        /// </summary>
        public static string LegendaS {
            get {
                return ResourceManager.GetString("LegendaS", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Liczba dobranych filtrów.
        /// </summary>
        public static string LiczbaDobranychFiltrow {
            get {
                return ResourceManager.GetString("LiczbaDobranychFiltrow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Liczba ślepych filtrów.
        /// </summary>
        public static string LiczbaSlepychFiltrow {
            get {
                return ResourceManager.GetString("LiczbaSlepychFiltrow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Lokalizacja okapu.
        /// </summary>
        public static string LokalizacjaOkapu {
            get {
                return ResourceManager.GetString("LokalizacjaOkapu", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Materiał wykonania.
        /// </summary>
        public static string MaterialWykonania {
            get {
                return ResourceManager.GetString("MaterialWykonania", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Stal nierdzewna AISI 304.
        /// </summary>
        public static string MaterialWykonaniaStalNierdzewna {
            get {
                return ResourceManager.GetString("MaterialWykonaniaStalNierdzewna", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Szkło.
        /// </summary>
        public static string MaterialWykonaniaSzklo {
            get {
                return ResourceManager.GetString("MaterialWykonaniaSzklo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Metoda obliczeń strumieni powietrza wyciąganego.
        /// </summary>
        public static string MetodaObliczenStrumieniPowietrzaWyciaganego {
            get {
                return ResourceManager.GetString("MetodaObliczenStrumieniPowietrzaWyciaganego", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Obliczenia SYNERGIA zostały przeprowadzone w oparciu o:.
        /// </summary>
        public static string MetodaObliczenStrumieniPowietrzaWyciaganegoLinia1 {
            get {
                return ResourceManager.GetString("MetodaObliczenStrumieniPowietrzaWyciaganegoLinia1", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu VDI 2052 Raumlufttechnische Anlagen fur Kuchen.
        /// </summary>
        public static string MetodaObliczenStrumieniPowietrzaWyciaganegoLinia2 {
            get {
                return ResourceManager.GetString("MetodaObliczenStrumieniPowietrzaWyciaganegoLinia2", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu fińskie badania dot. zachowania się oparów dla różych urządzeń kuchennych.
        /// </summary>
        public static string MetodaObliczenStrumieniPowietrzaWyciaganegoLinia3 {
            get {
                return ResourceManager.GetString("MetodaObliczenStrumieniPowietrzaWyciaganegoLinia3", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Konvektiovirtaukset, Virtual Space 4D Loppuraportti, Tyoterveyslaitos, 2006.
        /// </summary>
        public static string MetodaObliczenStrumieniPowietrzaWyciaganegoLinia4 {
            get {
                return ResourceManager.GetString("MetodaObliczenStrumieniPowietrzaWyciaganegoLinia4", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu PN-EN 16282-1:2017 Wyposażenie kuchni przemysłowych.
        /// </summary>
        public static string MetodaObliczenStrumieniPowietrzaWyciaganegoLinia5 {
            get {
                return ResourceManager.GetString("MetodaObliczenStrumieniPowietrzaWyciaganegoLinia5", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Miejscowość.
        /// </summary>
        public static string Miejscowosc {
            get {
                return ResourceManager.GetString("Miejscowosc", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Moc.
        /// </summary>
        public static string Moc {
            get {
                return ResourceManager.GetString("Moc", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Napięcie.
        /// </summary>
        public static string Nap {
            get {
                return ResourceManager.GetString("Nap", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nawiewniki wyporowe JRS.
        /// </summary>
        public static string NawiewnikiWyporoweJRSNaglowek {
            get {
                return ResourceManager.GetString("NawiewnikiWyporoweJRSNaglowek", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nawiewniki wyporowe JRS przeznaczone są do wyporowej dystrybucji powietrza. Przystosowane zostały do wentylacji pomieszczeń kuchennych, gdzie występują duże zyski ciepła. 
        ///Nawiewniki wyporowe JRS dostarczają powietrze do strefy przebywania ludzi z małą prędkością. Wewnątrz znajdują się deflektory, które zapewniają równomierne rozprowadzenie powietrza na całej powierzchni perforowanej płyty czołowej nawiewników. 
        ///Zalecana temperatura nawiewanego powietrza przez nawiewniki powinna być niższa o 3-6°C 
        ///od te [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string NawiewnikiWyporoweJRSOpis {
            get {
                return ResourceManager.GetString("NawiewnikiWyporoweJRSOpis", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nazwa urządzenia.
        /// </summary>
        public static string NazwaUrzadzenia {
            get {
                return ResourceManager.GetString("NazwaUrzadzenia", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Obiekt.
        /// </summary>
        public static string Obiekt {
            get {
                return ResourceManager.GetString("Obiekt", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Obliczenie strumienia powietrza wyciąganego.
        /// </summary>
        public static string ObliczenieStrumieniaPowietrzaWyciaganego {
            get {
                return ResourceManager.GetString("ObliczenieStrumieniaPowietrzaWyciaganego", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Obliczony minimalny strumień powietrza wywiewanego.
        /// </summary>
        public static string ObliczonyMinimalnyStrumienPowietrzaWywiewanego {
            get {
                return ResourceManager.GetString("ObliczonyMinimalnyStrumienPowietrzaWywiewanego", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap.
        /// </summary>
        public static string Okap {
            get {
                return ResourceManager.GetString("Okap", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap nr.
        /// </summary>
        public static string OkapNr {
            get {
                return ResourceManager.GetString("OkapNr", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JKI wyciągowy typu kondensacyjnego z płytami ociekowymi. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJKI {
            get {
                return ResourceManager.GetString("OpisOkapuJKI", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JLI-R-FF wyciągowy z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza oraz z filtrem siatkowym FF. Całkowita sprawność filtrów do 95%. Opory przepływu powietrza na poziomie 80-85 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJLI_R_FF {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-R-FF", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JLI-R wyciągowy z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza na poziomie 50-65 Pa. Sprawność filtra do 93%. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJLI_R_JCE {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-R-JCE", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JLI-R-Turbo wyciągowy z filtrem TurboSwing o sprawności do 98%, umożliwiającym również regulacją wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJLI_R_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-R-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JLI-R-UV wyciągowy z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza, z filtrem siatkowym FF oraz z filtrem ultrafioletowym UV Combilux. Całkowita sprawność filtrów do 99.9%. Opory przepływu powietrza na poziomie 85-90 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJLI_R_UV {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-R-UV", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JLI-R-UV-Turbo wyciągowy z filtrem UV-Turbo o sprawności usuwania tłuszczu do 98% i redukującym zapachy, umożliwiającym również regulacją wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJLI_R_UV_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-R-UV-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JLI-S-FF wyciągowy z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza oraz z filtrem siatkowym FF. Całkowita sprawność filtrów do 95%. Opory przepływu powietrza na poziomie 80-85 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJLI_S_FF {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-S-FF", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JLI-S wyciągowy z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza na poziomie 50-65 Pa. Sprawność filtra do 93%. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJLI_S_JCE {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-S-JCE", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JLI-S-Turbo wyciągowy z filtrem TurboSwing o sprawności do 98%, umożliwiającym również regulacją wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJLI_S_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-S-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JLI-S-UV wyciągowy z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza, z filtrem siatkowym FF oraz z filtrem ultrafioletowym UV Combilux. Całkowita sprawność filtrów do 99.9%. Opory przepływu powietrza na poziomie 85-90 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJLI_S_UV {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-S-UV", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JLI-S-UV-Turbo wyciągowy z filtrem UV-Turbo o sprawności usuwania tłuszczu do 98% i redukującym zapachy, umożliwiającym również regulacją wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJLI_S_UV_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJLI-S-UV-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSI-R-FF wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza oraz z filtrem siatkowym FF. Całkowita sprawność filtrów do 95%. Opory przepływu powietrza na poziomie 80-85 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSI_R_FF {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-R-FF", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSI-R wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o sprawności do 93% i stałymi oporami przepływu powietrza na poziomie 50-65 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSI_R_JCE {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-R-JCE", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSI-R-Turbo wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu, z filtrem TurboSwing o sprawności do 98%, umożliwiającym regulację wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSI_R_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-R-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSI-R-UV wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza, z filtrem siatkowym FF oraz z filtrem ultrafioletowym UV Combilux. Całkowita sprawność filtrów do 99.9%. Opory przepływu powietrza na poziomie 85-90 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSI_R_UV {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-R-UV", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSI-R-UV-Turbo wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu, z filtrem UV-Turbo o sprawności usuwania tłuszczu do 98% i redukującym zapachy, umożliwiającym regulację wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSI_R_UV_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-R-UV-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JSI-S-FF wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza oraz z filtrem siatkowym FF. Całkowita sprawność filtrów do 95%. Opory przepływu powietrza na poziomie 80-85 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJSI_S_FF {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-S-FF", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JSI-S wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o sprawności do 93% i stałymi oporami przepływu powietrza na poziomie 50-65 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJSI_S_JCE {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-S-JCE", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JSI-S-Turbo wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu, z filtrem TurboSwing o sprawności do 98%, umożliwiającym regulację wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJSI_S_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-S-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JSI-S-UV wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza, z filtrem siatkowym FF oraz z filtrem ultrafioletowym UV Combilux. Całkowita sprawność filtrów do 99.9%. Opory przepływu powietrza na poziomie 85-90 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło lamino [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string OpisOkapuJSI_S_UV {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-S-UV", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap szklany JSI-S-UV-Turbo wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu, z filtrem UV-Turbo o sprawności usuwania tłuszczu do 98% i redukującym zapachy, umożliwiającym regulację wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304 i szkło laminowane..
        /// </summary>
        public static string OpisOkapuJSI_S_UV_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJSI-S-UV-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSKI wyciągowo-nawiewny wyciągowy typu kondensacyjnego z nawiewnikami świeżego powietrza oraz płytami ociekowymi. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSKI {
            get {
                return ResourceManager.GetString("OpisOkapuJSKI", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSVI-R-FF wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza oraz z filtrem siatkowym FF. Całkowita sprawność filtrów do 95%. Opory przepływu powietrza na poziomie 80-85 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSVI_R_FF {
            get {
                return ResourceManager.GetString("OpisOkapuJSVI-R-FF", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSVI-R wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o sprawności do 93% i stałymi oporami przepływu powietrza na poziomie 50-65 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSVI_R_JCE {
            get {
                return ResourceManager.GetString("OpisOkapuJSVI-R-JCE", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSVI-R-Turbo wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu, z filtrem TurboSwing o sprawności do 98%, umożliwiającym regulację wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSVI_R_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJSVI-R-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSVI-R-UV wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza, z filtrem siatkowym FF oraz z filtrem ultrafioletowym UV Combilux. Całkowita sprawność filtrów do 99.9%. Opory przepływu powietrza na poziomie 85-90 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSVI_R_UV {
            get {
                return ResourceManager.GetString("OpisOkapuJSVI-R-UV", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JSVI-R-UV-Turbo wyciągowo-nawiewny z nawiewnikami świeżego powietrza, z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu, z filtrem UV-Turbo o sprawności usuwania tłuszczu do 98% i redukującym zapachy, umożliwiającym regulację wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJSVI_R_UV_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJSVI-R-UV-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JVI-R-FF wyciągowy z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza oraz z filtrem siatkowym FF. Całkowita sprawność filtrów do 95%. Opory przepływu powietrza na poziomie 80-85 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJVI_R_FF {
            get {
                return ResourceManager.GetString("OpisOkapuJVI-R-FF", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JVI-R wyciągowy z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu oraz filtrami cyklonowymi cylindrycznymi typu JCE o sprawności do 93% i stałych oporach przepływu powietrza na poziomie 50-65 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJVI_R_JCE {
            get {
                return ResourceManager.GetString("OpisOkapuJVI-R-JCE", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JVI-R-Turbo z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu, z filtrem TurboSwing o sprawności do 98%, umożliwiającym również regulację wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJVI_R_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJVI-R-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JVI-R-UV wyciągowy z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu. Kaseta filtracyjna z filtrami cyklonowymi cylindrycznymi typu JCE o stałych oporach przepływu powietrza, z filtrem siatkowym FF oraz z filtrem ultrafioletowym UV Combilux. Całkowita sprawność filtrów do 99.9%. Opory przepływu powietrza na poziomie 85-90 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJVI_R_UV {
            get {
                return ResourceManager.GetString("OpisOkapuJVI-R-UV", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap JVI-R-UV-Turbo z komorami ciśnieniowymi formującymi wiązki powietrza wspomagające kierowanie wywiewanego powietrza do wnętrza okapu z filtrem UV-Turbo o sprawności usuwania tłuszczu do 98% i redukującym zapachy, umożliwiającym również regulację wydatku powietrza w zakresie od 0m3/h do #MaxWydatekPowietrza#m3/h bez spadku sprawności filtracji. Opory przepływu powietrza do 60 Pa. Wykonanie okapu ze stali nierdzewnej AISI 304..
        /// </summary>
        public static string OpisOkapuJVI_R_UV_Turbo {
            get {
                return ResourceManager.GetString("OpisOkapuJVI-R-UV-Turbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Oświetlenie.
        /// </summary>
        public static string Oswietlenie {
            get {
                return ResourceManager.GetString("Oswietlenie", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Oświetlenie ledowe punktowe.
        /// </summary>
        public static string OswietlenieLedowePunktowe {
            get {
                return ResourceManager.GetString("OswietlenieLedowePunktowe", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Oznaczenie okapu.
        /// </summary>
        public static string OznaczenieOkapu {
            get {
                return ResourceManager.GetString("OznaczenieOkapu", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Płyta.
        /// </summary>
        public static string Plyta {
            get {
                return ResourceManager.GetString("Plyta", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Poj. wodna.
        /// </summary>
        public static string PojWodna {
            get {
                return ResourceManager.GetString("PojWodna", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Projesjonalistom.
        /// </summary>
        public static string Profesjonalistom {
            get {
                return ResourceManager.GetString("Profesjonalistom", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Przegroda na skropliny.
        /// </summary>
        public static string PrzegrodaNaSkropliny {
            get {
                return ResourceManager.GetString("PrzegrodaNaSkropliny", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Przepływ powietrza
        ///[m&lt;sup&gt;3&lt;/sup&gt;/h].
        /// </summary>
        public static string PrzeplywPowietrza {
            get {
                return ResourceManager.GetString("PrzeplywPowietrza", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Przyjęty strumień powietrza wywiewanego.
        /// </summary>
        public static string PrzyjetyStrumienPowietrzaWywiewanego {
            get {
                return ResourceManager.GetString("PrzyjetyStrumienPowietrzaWywiewanego", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Przykładowe zestawienie nawiewników zapewniających zbilansowenie strumienia nawiewnego i wywiewnego w kuchni..
        /// </summary>
        public static string PrzykladoweZestawienieNawiewnikow {
            get {
                return ResourceManager.GetString("PrzykladoweZestawienieNawiewnikow", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Przyścienny.
        /// </summary>
        public static string Przyscienny {
            get {
                return ResourceManager.GetString("Przyscienny", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Oddział Gdańsk.
        /// </summary>
        public static string RegionPolnocny {
            get {
                return ResourceManager.GetString("RegionPolnocny", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 661-501-797.
        /// </summary>
        public static string RegionPolnocnyTelefon {
            get {
                return ResourceManager.GetString("RegionPolnocnyTelefon", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Oddział Kraków.
        /// </summary>
        public static string RegionPoludniowy {
            get {
                return ResourceManager.GetString("RegionPoludniowy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 795-560-827.
        /// </summary>
        public static string RegionPoludniowyTelefon {
            get {
                return ResourceManager.GetString("RegionPoludniowyTelefon", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Oddział Wrocław.
        /// </summary>
        public static string RegionWroclaw {
            get {
                return ResourceManager.GetString("RegionWroclaw", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 785-559-958.
        /// </summary>
        public static string RegionWroclawTelefon {
            get {
                return ResourceManager.GetString("RegionWroclawTelefon", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Oddział Warszawa.
        /// </summary>
        public static string RegionWschodni {
            get {
                return ResourceManager.GetString("RegionWschodni", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 661-363-918.
        /// </summary>
        public static string RegionWschodniTelefon {
            get {
                return ResourceManager.GetString("RegionWschodniTelefon", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Oddział Poznań.
        /// </summary>
        public static string RegionZachodni {
            get {
                return ResourceManager.GetString("RegionZachodni", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 662-332-817.
        /// </summary>
        public static string RegionZachodniTelefon {
            get {
                return ResourceManager.GetString("RegionZachodniTelefon", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Średnica króćców nawiewnych.
        /// </summary>
        public static string SrednicaKroccowNawiewnych {
            get {
                return ResourceManager.GetString("SrednicaKroccowNawiewnych", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Średnica króćców wywiewnych.
        /// </summary>
        public static string SrednicaKroccowWywiewnych {
            get {
                return ResourceManager.GetString("SrednicaKroccowWywiewnych", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Strumień powietrza wyciąganego przez okap.
        /// </summary>
        public static string StrumienPowietrzaWyciaganegoPrzezOkap {
            get {
                return ResourceManager.GetString("StrumienPowietrzaWyciaganegoPrzezOkap", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu strumień przepływu powietrza przy poziome głośności 35 dB(A).
        /// </summary>
        public static string StrumienPrzeplywuPowietrzaPrzyGlosnosci {
            get {
                return ResourceManager.GetString("StrumienPrzeplywuPowietrzaPrzyGlosnosci", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Strumień wywiewu.
        /// </summary>
        public static string StrumienWymiewu {
            get {
                return ResourceManager.GetString("StrumienWymiewu", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ul. Logistyczna 23, Sady.
        /// </summary>
        public static string SynergiaAdresLinia1 {
            get {
                return ResourceManager.GetString("SynergiaAdresLinia1", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 62-080 Tarnowo Podgórne.
        /// </summary>
        public static string SynergiaAdresLinia2 {
            get {
                return ResourceManager.GetString("SynergiaAdresLinia2", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Synergia Sp. z.o.o..
        /// </summary>
        public static string SynergiaSpZoo {
            get {
                return ResourceManager.GetString("SynergiaSpZoo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Synergia Sp. z o.o. • ul. Logistyczna 23, Sady • 62-080 Tarnowo Podgórne.
        /// </summary>
        public static string SynergiaStopka {
            get {
                return ResourceManager.GetString("SynergiaStopka", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu www.synergia.pl.
        /// </summary>
        public static string SynergiaUrl {
            get {
                return ResourceManager.GetString("SynergiaUrl", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu System przeciwpożarowy Ansul R-102.
        /// </summary>
        public static string SystemAnsulR102SystemPrzeciwopozarowyNaglowek {
            get {
                return ResourceManager.GetString("SystemAnsulR102SystemPrzeciwopozarowyNaglowek", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Zabezpieczenie urządzeń gastronomicznych w profesjonalnych kuchniach systemami przeciwpożarowymi pozwala uniknąć poważnych konsekwencji związanych z wybuchem pożaru. System ANSUL to ochrona zdrowia i życia ludzkiego, cennego sprzętu oraz pomieszczeń. System pozwala na zmniejszenie ryzyka związanego z brakiem możliwości prowadzenia działalności spowodowanego konsekwencjami pożaru. Zabezpieczenia przeciwpożarowe urządzeń kuchennych są brane pod uwagę przez towarzystwa ubezpieczeniowe, co powoduje obniżenie ko [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string SystemAnsulR102SystemPrzeciwopozarowyOpis {
            get {
                return ResourceManager.GetString("SystemAnsulR102SystemPrzeciwopozarowyOpis", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Stosowany czynnik gaśniczy to ANSULEX, w jedym zbiorniku znajduje się 11,4l.
        /// </summary>
        public static string SystemAnsulR102WariantyCzynnikGasniczy {
            get {
                return ResourceManager.GetString("SystemAnsulR102WariantyCzynnikGasniczy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu &lt;b&gt;Dedykowany&lt;/b&gt; – każda dysza poniżej sufitu okapu chroni tylko urządzenie dla którego jest przeznaczona – w przypadku zamiany urządzeń lub przestawienia urządzeń system należy dostosować/przerobić..
        /// </summary>
        public static string SystemAnsulR102WariantyDedykowany {
            get {
                return ResourceManager.GetString("SystemAnsulR102WariantyDedykowany", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu System Ansul R-102 jest dostępny w dwóch opcjach rozmieszczenia dysz.
        /// </summary>
        public static string SystemAnsulR102WariantyNaglowek {
            get {
                return ResourceManager.GetString("SystemAnsulR102WariantyNaglowek", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu &lt;b&gt;Nakładający się&lt;/b&gt; – zasięgi dysz nakładają się i zabezpieczony jest cały obszar wymagający ochrony – urządzenia można dowolnie przestawiać lub zamieniać na całej długości obszaru chronionego..
        /// </summary>
        public static string SystemAnsulR102WariantyNakladajacySie {
            get {
                return ResourceManager.GetString("SystemAnsulR102WariantyNakladajacySie", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wymagania konieczne do spełnienia po stronie zamawiającego, w celu zapewnienia gwarancji skutecznego działania..
        /// </summary>
        public static string SystemAnsulR102WymaganiaNaglowek {
            get {
                return ResourceManager.GetString("SystemAnsulR102WymaganiaNaglowek", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu System ANSUL R-102 w przypadku aktywacji musi odciąć zasilanie urządzeń pod okapem (gazowych i elektrycznych). W szafce sterującej systemem ANSUL R-102 znajdują się styki rozwierno/zwierne..
        /// </summary>
        public static string SystemAnsulR102WymaganiaOpis1 {
            get {
                return ResourceManager.GetString("SystemAnsulR102WymaganiaOpis1", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Dlatego należy doprowadzić w pobliże skrzynki przewód/y 3x1mm2 (max 3) z zaworów gazowych i/lub przekaźników odcinających zasilanie elektryczne &lt;b&gt;(zawory i przekaźniki oraz doprowadzenie przewodów do skrzynki poza zakresem Synergia).&lt;/b&gt;
        ///W przypadku konieczności podłączenia do systemu alarmowego w budynku należy doprowadzić kolejny przewód 3x1mm2 &lt;b&gt;(doprowadzenie przewodu poza zakresem Synergia).&lt;/b&gt;
        ///W przypadku aktywacji systemu ANSUL R-102 wentylacja wywiewna musi pozostać włączona, natomiast wentylac [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string SystemAnsulR102WymaganiaOpis2 {
            get {
                return ResourceManager.GetString("SystemAnsulR102WymaganiaOpis2", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Systemy wentylacji kuchni.
        /// </summary>
        public static string SystemyWentylacjiKuchni {
            get {
                return ResourceManager.GetString("SystemyWentylacjiKuchni", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Szerokość elementu nawiewnego.
        /// </summary>
        public static string SzerokoscElementuNawiewnego {
            get {
                return ResourceManager.GetString("SzerokoscElementuNawiewnego", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Szerokość okapu.
        /// </summary>
        public static string SzerokoscOkapu {
            get {
                return ResourceManager.GetString("SzerokoscOkapu", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu szt..
        /// </summary>
        public static string Szt {
            get {
                return ResourceManager.GetString("Szt", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Typ filtra.
        /// </summary>
        public static string TypFiltra {
            get {
                return ResourceManager.GetString("TypFiltra", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu JCE – filtr cyklonowo-cylindryczny - filtracja jednostopniowa.
        /// </summary>
        public static string TypFiltraJCE {
            get {
                return ResourceManager.GetString("TypFiltraJCE", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu JFF – filtr cyklonowo-cylindryczny wraz z filtrem siatkowym - filtracja dwustopniowa.
        /// </summary>
        public static string TypFiltraJFF {
            get {
                return ResourceManager.GetString("TypFiltraJFF", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu TurboSwing – filtr TurboSwing z szybkoobrotową płytą filtracyjną – filtracja jednostopniowa.
        /// </summary>
        public static string TypFiltraTurboSwing {
            get {
                return ResourceManager.GetString("TypFiltraTurboSwing", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu UV-Combilux – filtr cyklonowo-cylindryczny wraz z filtrem siatkowym i filtrem UV - filtracja trzystopniowa.
        /// </summary>
        public static string TypFiltraUV {
            get {
                return ResourceManager.GetString("TypFiltraUV", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu UV-Turbo – filtr TurboSwing z szybkoobrotową płytą filtracyjną i filtrem UV – filtracja dwustopniowa.
        /// </summary>
        public static string TypFiltraUVTurbo {
            get {
                return ResourceManager.GetString("TypFiltraUVTurbo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Typ okapu.
        /// </summary>
        public static string TypOkapu {
            get {
                return ResourceManager.GetString("TypOkapu", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap kondensacyjny wyciągowy.
        /// </summary>
        public static string TypOkapuJKI {
            get {
                return ResourceManager.GetString("TypOkapuJKI", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap wyciągowy.
        /// </summary>
        public static string TypOkapuJLI_R {
            get {
                return ResourceManager.GetString("TypOkapuJLI-R", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap wyciągowo – nawiewny z wiązką wychwytującą.
        /// </summary>
        public static string TypOkapuJSI_R {
            get {
                return ResourceManager.GetString("TypOkapuJSI-R", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap kondensacyjny wyciągowo - nawiewny.
        /// </summary>
        public static string TypOkapuJSKI {
            get {
                return ResourceManager.GetString("TypOkapuJSKI", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Okap wyciągowy z wiązką wychwytującą.
        /// </summary>
        public static string TypOkapuJVI_R {
            get {
                return ResourceManager.GetString("TypOkapuJVI-R", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Typ/Wielkość nawiewnika.
        /// </summary>
        public static string TypWielkoscNawiewnika {
            get {
                return ResourceManager.GetString("TypWielkoscNawiewnika", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Układ dedykowany.
        /// </summary>
        public static string UkladDedykowany {
            get {
                return ResourceManager.GetString("UkladDedykowany", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Układ nakładający się.
        /// </summary>
        public static string UkladNakladajacySie {
            get {
                return ResourceManager.GetString("UkladNakladajacySie", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bemar.
        /// </summary>
        public static string UrzadzenieBemar {
            get {
                return ResourceManager.GetString("UrzadzenieBemar", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Frytkownica.
        /// </summary>
        public static string UrzadzenieFrytkownica {
            get {
                return ResourceManager.GetString("UrzadzenieFrytkownica", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Kocioł warzelny.
        /// </summary>
        public static string UrzadzenieKociolWarzelny {
            get {
                return ResourceManager.GetString("UrzadzenieKociolWarzelny", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Opiekacz gastronomiczny.
        /// </summary>
        public static string UrzadzenieOpiekaczGastronomiczny {
            get {
                return ResourceManager.GetString("UrzadzenieOpiekaczGastronomiczny", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Patelnia.
        /// </summary>
        public static string UrzadzeniePatelnia {
            get {
                return ResourceManager.GetString("UrzadzeniePatelnia", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Patelnia Wok.
        /// </summary>
        public static string UrzadzeniePatelniaWok {
            get {
                return ResourceManager.GetString("UrzadzeniePatelniaWok", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Piec do pizzy.
        /// </summary>
        public static string UrzadzeniePiecDoPizzy {
            get {
                return ResourceManager.GetString("UrzadzeniePiecDoPizzy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Piec kombi.
        /// </summary>
        public static string UrzadzeniePiecKombi {
            get {
                return ResourceManager.GetString("UrzadzeniePiecKombi", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Piec konwekcyjno-parowy.
        /// </summary>
        public static string UrzadzeniePiecKonwekcyjnoParowy {
            get {
                return ResourceManager.GetString("UrzadzeniePiecKonwekcyjnoParowy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Płyta grillowa.
        /// </summary>
        public static string UrzadzeniePlytaGrillowa {
            get {
                return ResourceManager.GetString("UrzadzeniePlytaGrillowa", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Płyta indukcyjna.
        /// </summary>
        public static string UrzadzeniePlytaIndukcyjna {
            get {
                return ResourceManager.GetString("UrzadzeniePlytaIndukcyjna", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Salamander.
        /// </summary>
        public static string UrzadzenieSalamander {
            get {
                return ResourceManager.GetString("UrzadzenieSalamander", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Szybkowar.
        /// </summary>
        public static string UrzadzenieSzybkowar {
            get {
                return ResourceManager.GetString("UrzadzenieSzybkowar", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Taboret grzewczy.
        /// </summary>
        public static string UrzadzenieTaboretGrzewczy {
            get {
                return ResourceManager.GetString("UrzadzenieTaboretGrzewczy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Trzon kuchenny.
        /// </summary>
        public static string UrzadzenieTrzonKuchenny {
            get {
                return ResourceManager.GetString("UrzadzenieTrzonKuchenny", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Warnik.
        /// </summary>
        public static string UrzadzenieWarnik {
            get {
                return ResourceManager.GetString("UrzadzenieWarnik", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Zmywarka.
        /// </summary>
        public static string UrzadzenieZmywarka {
            get {
                return ResourceManager.GetString("UrzadzenieZmywarka", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Uwagi.
        /// </summary>
        public static string Uwagi {
            get {
                return ResourceManager.GetString("Uwagi", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ciężar.
        /// </summary>
        public static string Waga {
            get {
                return ResourceManager.GetString("Waga", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Waga pustego urządzenia.
        /// </summary>
        public static string WagaPustegoUrzadzenia {
            get {
                return ResourceManager.GetString("WagaPustegoUrzadzenia", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wentylatory wiązki.
        /// </summary>
        public static string WentrylatoryWiązki {
            get {
                return ResourceManager.GetString("WentrylatoryWiązki", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu W oparciu o okap oraz grill węglowy dobrano następujące urządzenie.
        /// </summary>
        public static string WOparciuOOkapOrazGrillWeglowyDobranoNastępująceUrządzenie {
            get {
                return ResourceManager.GetString("WOparciuOOkapOrazGrillWeglowyDobranoNastępująceUrządzenie", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu W oparciu o technologię gastronomiczną, dobrane okapy oraz opcję rozmieszczenia dysz wybrano następującą wielkość systemu.
        /// </summary>
        public static string WOparciuOTechnologięGastronomiczną {
            get {
                return ResourceManager.GetString("WOparciuOTechnologięGastronomiczną", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu W oparciu o wybrany piec do pizzy dobrano następujące urządzenie.
        /// </summary>
        public static string WOparciuOWybranyPiecDoPizzyDobranoNastępująceUrządzenie {
            get {
                return ResourceManager.GetString("WOparciuOWybranyPiecDoPizzyDobranoNastępująceUrządzenie", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu wraz z panelem dotykowym FC.
        /// </summary>
        public static string WrazZPanelemDotykowym {
            get {
                return ResourceManager.GetString("WrazZPanelemDotykowym", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu W obliczonym minimalnym strumieniu powietrza wywiewanego uwzględniono współczynnik redukcyjny 0,63 dla okapu usytuowanego przyściennie..
        /// </summary>
        public static string Wspolczynnik063Info {
            get {
                return ResourceManager.GetString("Wspolczynnik063Info", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wyposażenie dodatkowe.
        /// </summary>
        public static string WyposazenieDodatkowe {
            get {
                return ResourceManager.GetString("WyposazenieDodatkowe", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wysokość okapu.
        /// </summary>
        public static string WysokoscOkapu {
            get {
                return ResourceManager.GetString("WysokoscOkapu", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wyspowy.
        /// </summary>
        public static string Wyspowy {
            get {
                return ResourceManager.GetString("Wyspowy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wytyczne projektowe.
        /// </summary>
        public static string WytyczneProjektowe {
            get {
                return ResourceManager.GetString("WytyczneProjektowe", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu &lt;li&gt;Podłączenia kanałów z SMOKI Junior należy traktować, jak kanały dymowe i stosować nierdzewne dwuścienne systemy kominowe.&lt;/li&gt;						
        ///&lt;li&gt;Ze względu na dużą wilgotność dymu opuszającego SMOKI i samą obecność dymu, kanały muszą być szczelne oraz należy układać je ze spadkiem w kierunku urządzenia. W przypadku braku możliwości ułożenia kanałów ze spadkiem w kierunku SMOKI, w najniższym miejscu instalacji zamontować kształtkę z możliwością odwodnienia. Kanał dymowy wyprowadzić ponad dach zgodnie z obowiązu [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string WytyczneProjektoweSmokiJuniorOpis {
            get {
                return ResourceManager.GetString("WytyczneProjektoweSmokiJuniorOpis", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu &lt;li&gt;Podłączenia kanałów z SMOKI Maxi Grill między grillem, a urządzeniem należy traktować jak kanały dymowe i stosować nierdzewne dwuśćienne systemy kominowe.&lt;/li&gt;						
        ///&lt;li&gt;Zalecane jest wykonanie kanałów za SMOKI Maxi Grill również w systemie kominowym, dopuszcza się stosowanie kształtek wentylacyjnych nierdzewnych.&lt;/li&gt;						
        ///&lt;li&gt;Ze względu na dużą wilgotność dymu opuszającego SMOKI kanały muszą być szczelne oraz należy układać je ze spadkiem w kierunku urządzenia. W przypadku braku możliwości ułożenia [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string WytyczneProjektoweSmokiMaxiOpis {
            get {
                return ResourceManager.GetString("WytyczneProjektoweSmokiMaxiOpis", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Załącznik.
        /// </summary>
        public static string Zalacznik {
            get {
                return ResourceManager.GetString("Zalacznik", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Załącznik nr.
        /// </summary>
        public static string ZalacznikNr {
            get {
                return ResourceManager.GetString("ZalacznikNr", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Zapytanie.
        /// </summary>
        public static string Zapytanie {
            get {
                return ResourceManager.GetString("Zapytanie", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Zbiornikowy.
        /// </summary>
        public static string Zbiornikowy {
            get {
                return ResourceManager.GetString("Zbiornikowy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Zużycie wody.
        /// </summary>
        public static string ZuzycieWody {
            get {
                return ResourceManager.GetString("ZuzycieWody", resourceCulture);
            }
        }
    }
}
